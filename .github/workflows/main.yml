name: AAAA

on:
  push:
    branches:
      - '*'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get Git Tag
      id: get_git_tag
      run: |
        TAG=$(git describe --tags --abbrev=0)
        echo "TAG=${TAG}" >> $GITHUB_ENV

        # Get the latest tag
        GIT_SHORT_HASH=$(git describe --tags --always)
        echo "GIT_SHORT_HASH=${GIT_SHORT_HASH}"

        # Strip leading and trailing whitespace
        GIT_SHORT_HASH=$(echo $GIT_SHORT_HASH | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
        echo "GIT_SHORT_HASH=${GIT_SHORT_HASH}"

        # Find the position of the first hyphen (-)
        iLength=$(expr index "$GIT_SHORT_HASH" -)
        echo "iLength=${iLength}"

        # Extract the MAIN_VERSION and PATCH_VERSION
        MAIN_VERSION=${GIT_SHORT_HASH:0:iLength-1}
        PATCH_VERSION=${GIT_SHORT_HASH:iLength}
        echo "MAIN_VERSION=${MAIN_VERSION}"
        echo "PATCH_VERSION=${PATCH_VERSION}"

        # Find the position of the first hyphen (-)
        iLength=$(expr index "$PATCH_VERSION" -)
        echo "iLength=${iLength}"

        PATCH_VERSION=${PATCH_VERSION:0:iLength-1}
        echo "PATCH_VERSION=${PATCH_VERSION}"

        # Combine MAIN_VERSION and PATCH_VERSION
        GIT_SHORT_HASH="${MAIN_VERSION}.${PATCH_VERSION}"
        echo "GIT_SHORT_HASH=${GIT_SHORT_HASH}" >> $GITHUB_ENV

        echo "BUILD_TIME=$(date "+%Y%m%d")" >> $GITHUB_ENV

    - name: Run Docker container
      run: |
        git describe --tags --always

        docker run --privileged --name myname1234 -v $PWD:/workspace sophgo/tpuc_dev:v2.2 /bin/bash -c "
          pwd
          ./release.sh
          source ./envsetup.sh
          ./build.sh
          python setup.py bdist_wheel
        "

    - name: Find and copy .tar.gz file
      run: |
        docker start myname1234
        FILE_PATH=$(docker exec myname1234 find /workspace -type f -name "*.tar.gz" -print -quit)
        if [ -n "$FILE_PATH" ]; then
          docker cp myname1234:"$FILE_PATH" ./
          ls -al
          pwd
        else
          echo "File not found in container"
        fi
        FILE_PATH=${FILE_PATH#/workspace/}
        echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV

        WHL_FILE_PATH=$(docker exec myname1234 find /workspace -type f -name "*.whl" -print -quit)
        if [ -n "$WHL_FILE_PATH" ]; then
          docker cp myname1234:"$WHL_FILE_PATH" ./
          ls -al
          pwd
        else
          echo "File not found in container"
        fi
        WHL_FILE_PATH=${WHL_FILE_PATH#/workspace/dist/}
        echo "WHL_FILE_PATH=$WHL_FILE_PATH" >> $GITHUB_ENV
    - name: Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh release create "${{ env.TAG }}"
        "./${{ env.FILE_PATH }}"
        "./${{ env.WHL_FILE_PATH }}"
        --generate-notes
        --title "Release tpu-mlir_${{ env.GIT_SHORT_HASH }}-${{ env.BUILD_TIME }}.tar.gz"

